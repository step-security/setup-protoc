name: Check Taskfiles

env:
  # See: https://github.com/actions/setup-node/#readme
  NODE_VERSION: 20.x

# See: https://docs.github.com/actions/using-workflows/events-that-trigger-workflows
on:
  push:
    paths:
      - ".github/workflows/check-taskfiles.ya?ml"
      - "package.json"
      - "package-lock.json"
      - "**/Taskfile.ya?ml"
  pull_request:
    paths:
      - ".github/workflows/check-taskfiles.ya?ml"
      - "package.json"
      - "package-lock.json"
      - "**/Taskfile.ya?ml"
  schedule:
    # Run every Tuesday at 8 AM UTC to catch breakage resulting from changes to the JSON schema.
    - cron: "0 8 * * TUE"
  workflow_dispatch:

permissions: {}

jobs:
  validate:
    permissions:
      contents: read  # for actions/checkout to fetch code
    name: Validate ${{ matrix.file }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        file:
          - ./**/Taskfile.yml

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download JSON schema for Taskfiles
        id: download-schema
        uses: carlosperate/download-file-action@3ec6fcef61e19eaaa0236a95fbaf333f2baf341e # v2.0.2
        with:
          # Source: https://github.com/SchemaStore/schemastore/blob/master/src/schemas/json/taskfile.json
          file-url: https://taskfile.dev/schema.json
          location: ${{ runner.temp }}/taskfile-schema

      - name: Install JSON schema validator
        run: npm install

      - name: Validate ${{ matrix.file }}
        run: |
          # See: https://github.com/ajv-validator/ajv-cli#readme
          npx \
            --package=ajv-cli \
            --package=ajv-formats \
            ajv validate \
              --all-errors \
              --strict=false \
              -c ajv-formats \
              -s "${{ steps.download-schema.outputs.file-path }}" \
              -d "${{ matrix.file }}"
